"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_censo-custody_solana-wallet-adapter_lib_esm_index_js"],{

/***/ "./node_modules/@censo-custody/solana-wallet-adapter/node_modules/eventemitter3/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@censo-custody/solana-wallet-adapter/node_modules/eventemitter3/index.js ***!
  \***********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@censo-custody/solana-wallet-adapter/node_modules/eventemitter3/index.js\n"));

/***/ }),

/***/ "./node_modules/@censo-custody/solana-wallet-adapter/lib/esm/censocustody.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@censo-custody/solana-wallet-adapter/lib/esm/censocustody.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CensoWallet: function() { return /* binding */ CensoWallet; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/@censo-custody/solana-wallet-adapter/node_modules/eventemitter3/index.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\nconst DEFAULT_SIGNATURE_BUFFER = Buffer.alloc(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SIGNATURE_LENGTH_IN_BYTES).fill(0);\nclass CensoWallet extends eventemitter3__WEBPACK_IMPORTED_MODULE_2__.EventEmitter {\n    constructor() {\n        super();\n        this.url = 'https://wallet.censocustody.com';\n        this.cleanUp = () => {\n            [...this._timers].forEach(t => this.clearTimer(t));\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.close();\n            }\n            this._wallet = null;\n            this.emit('disconnected');\n        };\n        this.clearTimer = (timer) => {\n            this._timers = this._timers.filter(t => t != timer);\n            window.clearInterval(timer);\n        };\n        this.instructionsToSerializableInstructions = (instructions) => instructions.map(i => {\n            return {\n                'programId': i.programId.toBase58(),\n                'accountMetas': i.keys.map(k => {\n                    return {\n                        address: k.pubkey.toBase58(),\n                        signer: k.isSigner,\n                        writable: k.isWritable,\n                    };\n                }),\n                'data': window.btoa(String.fromCharCode(...i.data)),\n            };\n        });\n        this.handleWalletMessage = (data) => {\n            var _a, _b, _c;\n            if (data.type == \"connected\") {\n                this._connecting = false;\n                if (!data.error) {\n                    this.isLoggedIn = true;\n                    if ((_a = data.connected) === null || _a === void 0 ? void 0 : _a.publicKey) {\n                        this._publicKey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(data.connected.publicKey);\n                    }\n                }\n            }\n            else if ([\"sendTransaction\", \"sendFinalTransaction\"].includes(data.type)) {\n                const transactionIdentifier = (_b = data.sendTransaction) === null || _b === void 0 ? void 0 : _b.identifier;\n                if (transactionIdentifier && transactionIdentifier in this._pendingTransactions) {\n                    if (data.error) {\n                        this._pendingTransactionErrors[transactionIdentifier] = { message: data.error };\n                    }\n                    else {\n                        this._pendingTransactions[transactionIdentifier] = data.sendTransaction || null;\n                    }\n                }\n            }\n            else if (data.type == \"signTransaction\") {\n                const transactionIdentifier = (_c = data.signTransaction) === null || _c === void 0 ? void 0 : _c.identifier;\n                if (transactionIdentifier && transactionIdentifier in this._pendingTransactions) {\n                    if (data.error) {\n                        this._pendingTransactionErrors[transactionIdentifier] = { message: data.error };\n                    }\n                    else {\n                        this._pendingTransactions[transactionIdentifier] = data.signTransaction || null;\n                    }\n                }\n            }\n        };\n        this.isLoggedIn = false;\n        this._pendingTransactions = {};\n        this._pendingTransactionErrors = {};\n        this._timers = [];\n        this._wallet = null;\n        this._connecting = false;\n        this._publicKey = null;\n        window.addEventListener(\"message\", (e) => {\n            this.handleWalletMessage(e.data);\n        });\n    }\n    async connect(url) {\n        try {\n            this.url = url || this.url;\n            const origin = encodeURIComponent(window.location.origin);\n            const connectUrl = `${this.url}/connect?origin=${origin}`;\n            this._connecting = true;\n            this._wallet = window.open(connectUrl, `censo-custody-${origin}`, \"height=900,width=800,menubar=no,status=no,toolbar=no\");\n            if (!this._wallet) {\n                this._connecting = false;\n                throw new Error(\"Unable to connect to wallet\");\n            }\n            this._timers.push(window.setInterval(() => {\n                if (this._wallet.closed) {\n                    this.cleanUp();\n                }\n                else if (this._wallet) {\n                    this._wallet.postMessage({ type: 'heartbeat' }, this.url);\n                }\n            }, 100));\n            return new Promise((resolve, reject) => {\n                const timer = window.setInterval(() => {\n                    if (this.isLoggedIn && this._publicKey) {\n                        this.clearTimer(timer);\n                        resolve(this._publicKey);\n                    }\n                    else if (!this.isLoggedIn && !this._connecting) {\n                        this.clearTimer(timer);\n                        reject(new Error(\"Unable to connect to Censo\"));\n                    }\n                }, 100);\n                this._timers.push(timer);\n            });\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    async signTransaction(transaction) {\n        this.verifyCanSignRequests([transaction]);\n        try {\n            return this.signOneTransaction(transaction);\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    async signAllTransactions(transactions) {\n        this.verifyCanSignRequests(transactions);\n        try {\n            return this.signMultipleTransactions(transactions);\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    async sendTransaction(transaction, connection, options) {\n        try {\n            const wallet = this._wallet;\n            if (!wallet)\n                throw new Error(\"Not Connected\");\n            const transactionIdentifier = (0,uuid__WEBPACK_IMPORTED_MODULE_3__.v4)();\n            this._pendingTransactions[transactionIdentifier] = null;\n            const signers = options ? options.signers : undefined;\n            if (signers && signers.length > 0) {\n                return new Promise((resolve, reject) => {\n                    this.signOneTransaction(transaction, transactionIdentifier).then(walletTransaction => {\n                        this._pendingTransactions[transactionIdentifier] = null;\n                        (signers === null || signers === void 0 ? void 0 : signers.length) && walletTransaction.partialSign(...signers);\n                        wallet.postMessage({\n                            type: \"sendFinalTransaction\", sendFinalTransaction: {\n                                transactionIdentifier,\n                                signaturePubkeyPairs: walletTransaction.signatures.filter(sp => sp.signature != null).map(sp => {\n                                    return {\n                                        'pubkey': sp.publicKey.toBase58(),\n                                        'signature': sp.signature.toString('base64')\n                                    };\n                                })\n                            }\n                        }, this.url);\n                        const timer = window.setInterval(() => {\n                            const pendingTransaction = this._pendingTransactions[transactionIdentifier];\n                            const pendingTransactionError = this._pendingTransactionErrors[transactionIdentifier];\n                            if (pendingTransaction != null || pendingTransactionError != null) {\n                                this.clearTimer(timer);\n                                pendingTransaction && resolve(pendingTransaction.signature);\n                                pendingTransactionError && reject(pendingTransactionError);\n                            }\n                        }, 100);\n                        this._timers.push(timer);\n                    }).catch((error) => {\n                        reject(error);\n                        throw error;\n                    });\n                });\n            }\n            else {\n                const instructions = this.instructionsToSerializableInstructions(transaction.instructions);\n                return new Promise((resolve, reject) => {\n                    wallet.postMessage({\n                        type: \"sendTransaction\",\n                        sendTransaction: { instructions, transactionIdentifier }\n                    }, this.url);\n                    const timer = window.setInterval(() => {\n                        const pendingTransaction = this._pendingTransactions[transactionIdentifier];\n                        const pendingTransactionError = this._pendingTransactionErrors[transactionIdentifier];\n                        if (pendingTransaction != null || pendingTransactionError != null) {\n                            this.clearTimer(timer);\n                            pendingTransaction && resolve(pendingTransaction.signature);\n                            pendingTransactionError && reject(pendingTransactionError);\n                        }\n                    }, 100);\n                    this._timers.push(timer);\n                });\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    buildTransaction(pendingTransaction) {\n        let message = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Message.from(Buffer.from(Uint8Array.from(window.atob(pendingTransaction.message), c => c.charCodeAt(0))));\n        return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.populate(message, Array.from({ length: message.header.numRequiredSignatures }, (_v, i) => {\n            let sigPubkeyPair = pendingTransaction.signatures.find(s => s.pubkey == message.accountKeys[i].toBase58());\n            return bs58__WEBPACK_IMPORTED_MODULE_1__.encode(sigPubkeyPair\n                ? Buffer.from(Uint8Array.from(window.atob(sigPubkeyPair.signature), c => c.charCodeAt(0)))\n                : DEFAULT_SIGNATURE_BUFFER);\n        }));\n    }\n    verifyCanSignRequests(transactions) {\n        transactions.forEach(transaction => {\n            if (transaction.signatures.some(s => s.signature != null)) {\n                throw new Error(\"Censo does not support this signing mode\");\n            }\n        });\n    }\n    signOneTransaction(transaction, transactionIdentifier = (0,uuid__WEBPACK_IMPORTED_MODULE_3__.v4)()) {\n        const wallet = this._wallet;\n        if (!wallet)\n            throw new Error(\"Not Connected\");\n        const instructions = this.instructionsToSerializableInstructions(transaction.instructions);\n        this._pendingTransactions[transactionIdentifier] = null;\n        return new Promise((resolve, reject) => {\n            wallet.postMessage({ type: \"signTransaction\", signTransaction: { instructions, transactionIdentifier } }, this.url);\n            const timer = window.setInterval(() => {\n                const pendingTransaction = this._pendingTransactions[transactionIdentifier];\n                const pendingTransactionError = this._pendingTransactionErrors[transactionIdentifier];\n                if (pendingTransaction != null || pendingTransactionError != null) {\n                    this.clearTimer(timer);\n                    pendingTransaction && resolve(this.buildTransaction(pendingTransaction));\n                    pendingTransactionError && reject(pendingTransactionError);\n                }\n            }, 100);\n            this._timers.push(timer);\n        });\n    }\n    signMultipleTransactions(transactions) {\n        const wallet = this._wallet;\n        if (!wallet)\n            throw new Error(\"Not Connected\");\n        const serializedTransactions = transactions.map((t) => {\n            return {\n                instructions: this.instructionsToSerializableInstructions(t.instructions),\n                transactionIdentifier: (0,uuid__WEBPACK_IMPORTED_MODULE_3__.v4)()\n            };\n        });\n        const transactionIdentifiers = serializedTransactions.map((t) => t.transactionIdentifier);\n        transactionIdentifiers.forEach((transactionIdentifier) => this._pendingTransactions[transactionIdentifier] = null);\n        return new Promise((resolve, reject) => {\n            wallet.postMessage({ type: \"signAllTransactions\", signAllTransactions: { transactions: serializedTransactions } }, this.url);\n            const timer = window.setInterval(() => {\n                const pendingTransactions = transactionIdentifiers.map((txId) => this._pendingTransactions[txId]);\n                const pendingTransactionErrors = transactionIdentifiers.map((txId) => this._pendingTransactionErrors[txId]);\n                if (pendingTransactions.every((t) => t != null)) {\n                    this.clearTimer(timer);\n                    resolve(pendingTransactions.map((pt) => this.buildTransaction(pt)));\n                }\n                else if (pendingTransactionErrors.some((e) => e != null)) {\n                    this.clearTimer(timer);\n                    reject(pendingTransactionErrors.find((e) => e != null));\n                }\n            }, 100);\n            this._timers.push(timer);\n        });\n    }\n}\n//# sourceMappingURL=censocustody.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@censo-custody/solana-wallet-adapter/lib/esm/censocustody.js\n"));

/***/ }),

/***/ "./node_modules/@censo-custody/solana-wallet-adapter/lib/esm/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@censo-custody/solana-wallet-adapter/lib/esm/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _censocustody_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./censocustody.js */ \"./node_modules/@censo-custody/solana-wallet-adapter/lib/esm/censocustody.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _censocustody_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _censocustody_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNlbnNvLWN1c3RvZHkvc29sYW5hLXdhbGxldC1hZGFwdGVyL2xpYi9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjZW5zby1jdXN0b2R5L3NvbGFuYS13YWxsZXQtYWRhcHRlci9saWIvZXNtL2luZGV4LmpzPzEyZjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9jZW5zb2N1c3RvZHkuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@censo-custody/solana-wallet-adapter/lib/esm/index.js\n"));

/***/ })

}]);